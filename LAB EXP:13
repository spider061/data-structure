#include<stdio.h>
 #include<stdlib.h>
 #define Max 100
 int tree[Max];
 int size = 0;
 void init(){
     for(int i =0;i<Max;i++){
         tree[i]=-1;
     }
 }
 void insert(int n){
     for(int i =0;i<n;i++){
         scanf("%d",&tree[size++]);
     }
 }
 void perorder(int root){
 if(tree[root]==-1)
 return ;
 printf("%d ",tree[root]);
 perorder(2*root+1);
 perorder(2*root+2);
 }
 void inorder(int root){
     if(tree[root]==-1)
 return ;
 inorder(2*root+1);
 printf("%d ",tree[root]);
 inorder(2*root+2);
 }
 void postorder(int root){
  if(tree[root]==-1)
 return ;
 postorder(2*root+1);
 postorder(2*root+2);
 printf("%d ",tree[root]);
 }
 int search(int target){
     for(int i =0;i<size;i++){
         if(tree[i]==target)
         return i;
     }
     return -1;
 }
 void delete(int value){
     int i = search(value);
     if(i ==-1)
     printf("Elemnet not found");
     else{
         tree[i]=tree[size-1];
         tree[size-1]=-1;
         size--;
         printf("Element Deleted!!!!\n");
     }
 }
 int main (){
     init();
     int n,choice,index;
    while(1){
     printf("1. Insert\n2. Pre Order\n3. Inorder\n4.Postorder\n5.Search\n6.Delete\n7.Exit\n");
     printf("Enter the choice = ");
     scanf("%d",&choice);
     switch(choice){
         case 1:
         printf("Enter the value of n = ");
         scanf("%d",&n);
         insert(n);
         break;
         case 2:
         break;
         case 3:
         printf("\n In-Order \n");
         inorder(0);
         break;
         case 4:
         printf("\n Post-Order \n");
         postorder(0);
         break;
         case 5:
         printf("Enter the value = ");
         scanf("%d",&n);
         index = search(n);
         if(index==-1)
         printf("Not found !!!\n");
         else
         printf("Found!!!\n");
         break;
         case 6:
         printf("Enter the value = ");
         scanf("%d",&n);
         delete(n);
         break;
         case 7:
         exit(0);
         break;
         default:
         printf("Invalid choice !!!!!\n");
     }
    }
     return 0;
 }

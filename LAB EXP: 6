#include<stdio.h>
#include<stdlib.h>
#define SIZE 100
int queue[SIZE],rear=-1, front=-1;
int isEmpty(){
    return (front==-1) ? 1 : 0;
}
int isFull(){
    return (rear==SIZE-1) ? 1 : 0;
}
void enqueue(int data){
    queue[++rear] = data;
    if(front==-1) front=rear;
    printf("element inserted!!!");
}
int dequeue(){
    int val = queue[front];
    
    if(front==rear){
        front = rear = -1;
    }
  else{
      front++;
  }
  return val;
}
int peek(){
    return queue[front];
}
void display(){
    printf("queue elements are: ");
    for(int i=0;i<=rear;i++){
        printf("%d ",queue[i]);
    }
}
int main(){
    while(1){
        printf("1. Enqueue\n");
        printf("2. Dequeue\n");
        printf("3. Peek\n");
        printf("4. Display\n");
        printf("5. Exit\n");
        int choice, data;
        printf("enter choice:");
        scanf("%d",&choice);
        switch(choice){
            case 1:
            if(isFull())
            printf("queue overflow!!!");
            else{
                printf("enter element: ");
                scanf("%d",&data);
                enqueue(data);
            }
            break;
            case 2:
            if (isEmpty())
            printf("queue underflow!!!");
            else{
            printf("%d dequeue from the queue\n", dequeue());
            }
            break;
            case 3:
            if(isEmpty()){
                printf("Queue is empty\n");
            }
            else{
            printf("queue empty!!!");
            
            printf("elements available at front is %d\n",peek());
            }
            break;
            case 4:
            printf("queue is empty!!!");
            display();
            break;
            case 5:
            
            exit(0);
            default:
            printf("Invalid Choice!!!");
            }
            printf("\n");
    }
    return 0;  
}
